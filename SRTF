#include <stdio.h>
#include <stdlib.h>
struct process
{
    int at, bt, ct, tat, wt, rt, rbt, st, pid;
} ps[100];
int main()
{
    int n;
    printf("How many processes do you want to enter\n");
    scanf("%d", &n);
    printf("Enter the value of arrival time  burst time\n");
    for (int i = 0; i < n; i++)
    {
        scanf("%d%d", &ps[i].at, &ps[i].bt);
        ps[i].pid = 1;
        ps[i].rbt = ps[i].bt;
    }
    int completed = 0;
    int is_completed[100] = {0};
    int current_time = 0;
    while (completed != n)
    {
        int min_index = -1;
        int min = 32000;
        for (int i = 0; i < n; i++)
        {
            if (ps[i].at <= current_time && ps[i].rbt > 0 && is_completed[i] == 0)
            {

                if (ps[i].rbt < min)
                {
                    min = ps[i].rbt;
                    min_index = i;
                }
                if (ps[i].rbt == min)
                {
                    if(ps[i].at < ps[min_index].at){
                        min = ps[i].rbt;
                    min_index = i;
                    }
                   
                }
            }
        }
        if (min_index == -1)
        {
            current_time++;
        }
        else
        {
            ps[min_index].rbt -= 1;
            current_time++;

            if (ps[min_index].rbt == 0)
            {
                ps[min_index].ct = current_time;
                ps[min_index].tat = ps[min_index].ct - ps[min_index].at;
                ps[min_index].wt = ps[min_index].tat - ps[min_index].bt;

                completed++;
                is_completed[min_index] = 1;
            }
        }
    }
    for (int i = 0; i < n; i++)
    {
        printf("%d\t%d\t%d\n", ps[i].ct, ps[i].tat, ps[i].wt);
    }
    return 0;
}
